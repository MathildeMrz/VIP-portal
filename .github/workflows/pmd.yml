# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
env:
  PRE_BUILD_COMMAND: git config --global --add safe.directory /github/workspace
  
name: pmd

on:
  push:
    branches: [ "master" ]
   
  pull_request:
    branches: [ "master" ]
     
  schedule:
    - cron: '40 1 * * 0'

permissions:
  contents: read
  
jobs:

  ###########################################################################################################################################
  ######################################################## PMD Quality code analysis ########################################################
  ###########################################################################################################################################

   pmd-code-scan: 
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - uses: pmd/pmd-github-action@v1
        with:
          rulesets: 'ruleset.xml'
                                       
      - name: Create results folder
        run: |
              mkdir -m 777 -p results
              
              currentDate=$(date +%Y-%m-%d-%H-%M-%S)
              newFileName="results-${currentDate}.sarif"
              mv pmd-report.sarif "${newFileName}"
              cp -r "${newFileName}" results/
              echo "Sarif code quality report created"
              echo "SARIF_PATH=${{ env.newFileName }}" >> $GITHUB_ENV
              
   commit-folder:
      needs: pmd-code-scan
      runs-on: ubuntu-latest
      steps:
        - name: Commit files
          run: | 
                ls results
                git config remote.origin.url https://github.com/MathildeMrz/vip-portal.git
                git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
                git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
                ls results
                git add results
                git commit -m "Push results folder"


        - name: Push changes
          uses: ad-m/github-push-action@master
          with:
            github_token: ${{ secrets.SECURITY_TOKEN }}
            branch: ${{ github.ref }}   

  ###########################################################################################################################################
  ######################################################## Security report generation #######################################################
  ###########################################################################################################################################
             
   security-report-generation:
    needs: commit-folder
    runs-on: windows-latest
    steps:
      - name: Generate Security Report
        uses: peter-murray/github-security-report-action@v2
        with:
          token: ${{ secrets.SECURITY_TOKEN }}
          repository: MathildeMrz/vip-portal
          sarifReportDir: ${{ env.SARIF_PATH }}
          outputDir: aaaa

          
   
          
  ###########################################################################################################################################
  ############################################################### Maven build ###############################################################
  ###########################################################################################################################################

   build_maven:
    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn clean install
      
      
 ###########################################################################################################################################
 #################################################### Jacoco static page creation build ####################################################
 ###########################################################################################################################################
